#version 330 core
#extension GL_ARB_separate_shader_objects : enable

layout (location=0) in vec3 fragmentPos;
layout (location=1) in vec2 fragmentTexCoord;
layout (location=2) in vec3 fragmentNormal;

uniform sampler2D imageTexture;
uniform vec3 ambient;
uniform vec3 lightPos;
uniform vec3 lightCol;

layout (location=0) out vec4 colour;

void main()
{
    //directions
    vec3 norm = normalize(fragmentNormal);
	vec3 lightDir = normalize(lightPos - fragmentPos);

    //calculate lighting
	float diffusionLevel = max(0.0,dot(norm,lightDir));
	vec3 lightLevel = lightCol*diffusionLevel + ambient;

    //return pixel colour
	colour = vec4(lightLevel,1.0) * texture(imageTexture,fragmentTexCoord);
}